## TODO: make it match the specs
#
##
## CORS preflight requests
##
#oc_api_cors:
#    url: /api/*
#    class: sfRequestRoute
#    param: { module: ocApiOAuth, action: preflight}
#    options:
#        secure: false
#    requirements:
#        sf_method: [OPTIONS]
#
##
## LOGIN
##
#oc_api_login:
#    url: /api/v2/login
#    class: sfRequestRoute
#    param: { module: ocApiCustomers, action: login }
#    options:
#        credentials: tck-onlinechoices-api-login
#    requirements:
#        sf_method: [GET, POST]
#oc_api_logout:
#    url: /api/v2/logout
#    class: sfRequestRoute
#    param: { module: ocApiCustomers, action: logout }
#    options:
#        credentials: tck-onlinechoices-api-logout
#    requirements:
#        sf_method: [GET, POST]
#
##
## PICTURE
##
#oc_api_picture:
#    url: /api/v2/picture/:id
#    class: sfRequestRoute
#    param: { module: ocPicture, action: display }
#    options:
#        credentials: tck-onlinechoices-api-picture
#    requirements:
#        id: \d+
#        sf_method: [GET]
#
##
## CUSTOMER
##
#oc_api_customers_list:
#    url: /api/v2/customers
#    class: sfRequestRoute
#    param: { module: ocApiCustomers, action: index }
#    options:
#        credentials: tck-onlinechoices-api-customers
#    requirements:
#        sf_method: [GET]
#oc_api_customers_create:
#    url: /api/v2/customers
#    class: sfRequestRoute
#    param: { module: ocApiCustomers, action: index }
#    options:
#        credentials: tck-onlinechoices-api-customers-new
#    requirements:
#        sf_method: [POST]
#
#oc_api_customers_resource:
#    url: /api/v2/customers/:id
#    class: sfRequestRoute
#    param: { module: ocApiCustomers, action: resource }
#    options:
#        credentials: tck-onlinechoices-api-customers-show
#    requirements:
#        id: \d+
#        sf_method: [GET]
#oc_api_customers_resource_edit:
#    url: /api/v2/customers/:id
#    class: sfRequestRoute
#    param: { module: ocApiCustomers, action: resource }
#    options:
#        credentials: tck-onlinechoices-api-customers-edit
#    requirements:
#        id: \d+
#        sf_method: [POST]
#oc_api_customers_resource_delete:
#    url: /api/v2/customers/:id
#    class: sfRequestRoute
#    param: { module: ocApiCustomers, action: resource }
#    options:
#        credentials: tck-onlinechoices-api-customers-del
#    requirements:
#        id: \d+
#        sf_method: [DELETE]
#
##
## CUSTOMER ORDER
##
#oc_api_customers_orders:
#    url: /api/v2/customers/:id/orders
#    class: sfRequestRoute
#    param: { module: ocApiCustomerOrders, action: index }
#    options:
#        credentials: tck-onlinechoices-api-orders
#    requirements:
#        id: \d+
#        sf_method: [GET]
#
#oc_api_customers_orders_resource:
#    url: /api/v2/customers/:id/orders/:order_id
#    class: sfRequestRoute
#    param: { module: ocApiCustomerOrders, action: resource }
#    options:
#        credentials: tck-onlinechoices-api-orders-show
#    requirements:
#        id: \d+
#        order_id: \d+
#        sf_method: [GET]
#
#
##
## MANIFESTATION
##
#oc_api_manifestations:
#    url: /api/v2/manifestations
#    class: sfRequestRoute
#    param: { module: ocApiManifestations, action: index }
#    options:
#        credentials: tck-onlinechoices-api-manifestations
#    requirements:
#        sf_method: [GET]
#
#oc_api_manifestations_resource:
#    url: /api/v2/manifestations/:id
#    class: sfRequestRoute
#    param: { module: ocApiManifestations, action: resource }
#    options:
#        credentials: tck-onlinechoices-api-manifestations-show
#    requirements:
#        id: \d+
#        sf_method: [GET]
#
##
## ORDERS
##
#
os_api_orders:
    url: /api/v2/orders
    class: sfRequestRoute
    param: { module: osApiOrders, action: index }
    options:
        credentials: tck-onlinechoices-api-orders
    requirements:
        sf_method: [GET]

os_api_orders_resource:
    url: /api/v2/orders/:id
    class: sfRequestRoute
    param: { module: osApiOrders, action: resource }
    options:
        credentials: tck-onlinechoices-api-orders-show
    requirements:
        id: \d+
        sf_method: [GET]

os_api_orders_action:
    url: /api/v2/orders/:do_action/:id
    class: sfRequestRoute
    param: { module: osApiOrders, action: action }
    options:
        credentials: tck-onlinechoices-api-orders-action
    requirements:
        id: \d+
        do_action: ship|cancel|complete
        sf_method: [GET]

##
## CARTS
##
os_api_carts_list:
    url: /api/v2/carts
    class: sfRequestRoute
    param: { module: osApiCarts, action: index }
    options:
        credentials: tck-onlinechoices-api-carts
    requirements:
        sf_method: [GET]
os_api_carts_create:
    url: /api/v2/carts
    class: sfRequestRoute
    param: { module: osApiCarts, action: index }
    options:
        credentials: tck-onlinechoices-api-carts-create
    requirements:
        sf_method: [POST]

os_api_carts_resource:
    url: /api/v2/carts/:id
    class: sfRequestRoute
    param: { module: osApiCarts, action: resource }
    options:
        credentials: tck-onlinechoices-api-carts-show
    requirements:
        id: \d+
        sf_method: [GET]
os_api_carts_resource_edit:
    url: /api/v2/carts/:id
    class: sfRequestRoute
    param: { module: osApiCarts, action: resource }
    options:
        credentials: tck-onlinechoices-api-carts-edit
    requirements:
        id: \d+
        sf_method: [POST]
os_api_carts_resource_delete:
    url: /api/v2/carts/:id
    class: sfRequestRoute
    param: { module: osApiCarts, action: resource }
    options:
        credentials: tck-onlinechoices-api-carts-delete
    requirements:
        id: \d+
        sf_method: [DELETE]

##
## CART ITEMS
##
os_api_carts_items_list:
    url: /api/v2/carts/:id/items
    class: sfRequestRoute
    param: { module: osApiCartItems, action: index }
    options:
        credentials: tck-onlinechoices-api-cart-items
    requirements:
        id: \d+
        sf_method: [GET]
os_api_carts_items_create:
    url: /api/v2/carts/:id/items
    class: sfRequestRoute
    param: { module: osApiCartItems, action: index }
    options:
        credentials: tck-onlinechoices-api-cart-items-create
    requirements:
        id: \d+
        sf_method: [POST]

os_api_carts_items_resource:
    url: /api/v2/carts/:id/items/:item_id
    class: sfRequestRoute
    param: { module: osApiCartItems, action: resource }
    options:
        credentials: tck-onlinechoices-api-cart-items-show
    requirements:
        id: \d+
        item_id: \d+
        sf_method: [GET]
os_api_carts_items_resource_edit:
    url: /api/v2/carts/:id/items/:item_id
    class: sfRequestRoute
    param: { module: osApiCartItems, action: resource }
    options:
        credentials: tck-onlinechoices-api-cart-items-edit
    requirements:
        id: \d+
        item_id: \d+
        sf_method: [POST]
os_api_carts_items_resource_delete:
    url: /api/v2/carts/:id/items/:item_id
    class: sfRequestRoute
    param: { module: osApiCartItems, action: resource }
    options:
        credentials: tck-onlinechoices-api-cart-items-delete
    requirements:
        id: \d+
        item_id: \d+
        sf_method: [DELETE]
os_api_carts_items_reorder:
    url: /api/v2/carts/:id/items/reorder
    class: sfRequestRoute
    param: { module: osApiCartItems, action: reorder }
    options:
        credentials: tck-onlinechoices-api-cart-items-edit
    requirements:
        id: \d+
        sf_method: [POST]

##
## CHECKOUTS
##
#oc_api_checkouts:
#    url: /api/v2/checkouts/:id
#    class: sfRequestRoute
#    param: { module: ocApiCarts, action: resource }
#    options:
#        credentials: tck-onlinechoices-api-checkout
#    requirements:
#        cart_id: \d+
#        sf_method: [GET]
#
#oc_api_checkouts_addressing:
#    url: /api/v2/checkouts/addressing/:cart_id
#    class: sfRequestRoute
#    param: { module: ocApiCheckouts, action: addressing }
#    options:
#        credentials: tck-onlinechoices-api-checkouts-addressing
#    requirements:
#        cart_id: \d+
#        sf_method: [POST]
#
#oc_api_checkouts_payments:
#    url: /api/v2/checkouts/select-payment/:cart_id
#    class: sfRequestRoute
#    param: { module: ocApiCheckouts, action: payments }
#    options:
#        credentials: tck-onlinechoices-api-checkouts-payment
#    requirements:
#        cart_id: \d+
#        sf_method: [GET]
#
#oc_api_checkouts_payments_select:
#    url: /api/v2/checkouts/select-payment/:cart_id
#    class: sfRequestRoute
#    param: { module: ocApiCheckouts, action: selectPayments }
#    options:
#        credentials: tck-onlinechoices-api-checkouts-payment-create
#    requirements:
#        cart_id: \d+
#        sf_method: [POST]
#
#oc_api_checkouts_complete:
#    url: /api/v2/checkouts/complete/:cart_id
#    class: sfRequestRoute
#    param: { module: ocApiCarts, action: complete }
#    options:
#        credentials: tck-onlinechoices-api-checkouts-complete
#    requirements:
#        cart_id: \d+
#        sf_method: [POST]
#
#
##
## EVENTS
##
#oc_api_events:
#    url: /api/v2/events
#    class: sfRequestRoute
#    param: { module: ocApiEvents, action: index }
#    options:
#        credentials: tck-onlinechoices-api-events
#    requirements:
#        sf_method: [GET, POST]
#
#oc_api_events_resource:
#    url: /api/v2/events/:id
#    class: sfRequestRoute
#    param: { module: ocApiEvents, action: resource }
#    options:
#        credentials: tck-onlinechoices-api-events-show
#    requirements:
#        id: \d+
#        sf_method: [GET]
#
#
##
## PAYMENTS
##
os_api_payments:
    url: /api/v2/payments
    class: sfRequestRoute
    param: { module: osApiPayments, action: index }
    options:
        credentials: tck-onlinechoices-api-payments
    requirements:
        sf_method: [GET]

os_api_payments_resource:
    url: /api/v2/payments/:id
    class: sfRequestRoute
    param: { module: osApiPayments, action: resource }
    options:
        credentials: tck-onlinechoices-api-payments-show
    requirements:
        id: \d+
        sf_method: [GET]

##
## PRICES
##
#oc_api_prices:
#    url: /api/v2/prices
#    class: sfRequestRoute
#    param: { module: ocApiPrices, action: index }
#    options:
#        credentials: tck-onlinechoices-api-prices
#    requirements:
#        sf_method: [GET]
#
##
## PRODUCTS
##
#oc_api_products:
#    url: /api/v2/products
#    class: sfRequestRoute
#    param: { module: ocApiProducts, action: index }
#    options:
#        credentials: tck-onlinechoices-api-products
#    requirements:
#        sf_method: [GET]
#
#oc_api_products_resource:
#    url: /api/v2/products/:id
#    class: sfRequestRoute
#    param: { module: ocApiProducts, action: resource }
#    options:
#        credentials: tck-onlinechoices-api-products-show
#    requirements:
#        id: \d+
#        sf_method: [GET]
#
#
##
## PRODUCT CATEGORIES
##
#oc_api_product_categories:
#    url: /api/v2/productcategories
#    class: sfRequestRoute
#    param: { module: ocApiProductCategories, action: index }
#    options:
#        credentials: tck-onlinechoices-api-product-categories
#    requirements:
#        sf_method: [GET]
#
#
##
## PROMOTIONS
##
#oc_api_promotions:
#    url: /api/v2/promotions
#    class: sfRequestRoute
#    param: { module: ocApiPromotions, action: index }
#    options:
#        credentials: tck-onlinechoices-api-promotions
#    requirements:
#        sf_method: [GET]
#
#oc_api_promotions_resource:
#    url: /api/v2/promotions/:id
#    class: sfRequestRoute
#    param: { module: ocApiPromotions, action: resource }
#    options:
#        credentials: tck-onlinechoices-api-promotions-show
#    requirements:
#        id: \d+
#        sf_method: [GET]

#
# AUTH
#
oc_api_oauth_token:
    url: /api/oauth/v2/token
    class: sfRequestRoute
    param: { module: osApiOAuth, action: token }
    options:
        secure: false
    requirements:
        sf_method: [GET, POST]



##
## BACKEND
##
#
#oc_setup:
#  class: sfDoctrineRouteCollection
#  options:
#    model:                OcConfig
#    module:               ocSetup
#    prefix_path:          /oc_setup
#    column:               id
#    with_wildcard_routes: true
#
#oc_time_slot:
#  class: sfDoctrineRouteCollection
#  options:
#    model:                OcTimeSlot
#    module:               ocTimeSlot
#    prefix_path:          /oc_time_slot
#    column:               id
#    with_wildcard_routes: true
#oc_time_slot_refresh:
#  url: /oc_time_slot/refresh/*
#  class: sfRequestRoute
#  param: { module: ocTimeSlot, action: refresh }
#  requirements:
#    sf_method: [GET]

os_application:
  class: sfDoctrineRouteCollection
  options:
    model:                OsApplication
    module:               osApplication
    prefix_path:          /osApplication
    column:               id
    with_wildcard_routes: true

#oc_backend:
#  class: sfDoctrineRouteCollection
#  options:
#    model:                OcProfessional
#    module:               ocBackend
#    prefix_path:          /oc_backend
#    column:               id
#    with_wildcard_routes: true
#
#oc_backend_events:
#    url: /oc_backend/events
#    class: sfRequestRoute
#    param: { module: ocBackend, action: events }
#    requirements:
#        sf_method: [GET, POST]
#
#oc_backend_pros:
#    url: /oc_backend/pros
#    class: sfRequestRoute
#    param: { module: ocBackend, action: pros }
#    requirements:
#        sf_method: [GET, POST]
#
#oc_backend_save_snapshot:
#    url: /oc_backend/snapshot/save
#    class: sfRequestRoute
#    param: { module: ocBackend, action: saveSnapshot }
#    requirements:
#        sf_method: [GET, POST]
#oc_backend_load_snapshot:
#    url: /oc_backend/snapshot/load/:id
#    class: sfRequestRoute
#    param: { module: ocBackend, action: loadSnapshot }
#    requirements:
#        id: \d+
#        sf_method: [GET, POST]
#oc_backend_save_ordering:
#    url: /oc_backend/ordering/save
#    class: sfRequestRoute
#    param: { module: ocBackend, action: saveOrdering }
#    requirements:
#        id: \d+
#        sf_method: [POST]
#oc_backend_auto:
#    url: /oc_backend/auto
#    class: sfRequestRoute
#    param: { module: ocBackend, action: autoPositioning }
#    requirements:
#        sf_method: [GET, POST]
#oc_backend_validate:
#    url: /oc_backend/validate
#    class: sfRequestRoute
#    param: { module: ocBackend, action: validate }
#    requirements:
#        sf_method: [GET, POST]
#oc_backend_list_snapshots:
#    url: /oc_backend/list_snapshots
#    class: sfRequestRoute
#    param: { module: ocBackend, action: listSnapshots }
#    requirements:
#        sf_method: [GET, POST]
#
